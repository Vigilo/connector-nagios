[bus]
# Le trafic lié au bus XMPP doit-il être enregistré dans les logs ?
log_traffic = True

# Nom ou adresse IP du serveur XMPP à utiliser.
# Pour les besoins des tests, cet hôte DOIT ÊTRE invalide.
host = invalid.host

# Nom du service de publication pour les messages.
service = pubsub.localhost

# Nom d'utilisateur à utiliser pour se connecter au bus.
jid = connector-nagios@localhost

# Mot de passe à utiliser
password = connector-nagios

# Liste des noms des topics à surveiller, séparés par des virgules.
# Si la liste est vide, mettre uniquement une virgule.
# Pas utilisé par le connecteur-nagios.
subscriptions = ,


[connector]
# Emplacement du fichier de sauvegarde local en cas de pannes.
backup_file = /tmp/connector-nagios_backup.sqlite

# Nom de la table qui stocke les messages en attente à destination du bus.
backup_table_to_bus = tobus

# Nom de la table qui stocke les messages en attente en provenance du bus.
backup_table_from_bus = frombus



[publications]
# Noms des messages XML traités avec pour chaque type de message
# le nom du nœud XMPP sur lesquel les messages de ce type sont envoyés.
perf = /home/localhost/connector-nagios/perf
state = /home/localhost/connector-nagios/state
event = /home/localhost/connector-nagios/event



[connector-nagios]
# Liste des types de messages XML <command> que le connecteur-nagios
# acceptera de transmettre à Nagios, séparés par des virgules.
# Si la liste est vide, mettre uniquement une virgule.
accepted_commands = PROCESS_SERVICE_CHECK_RESULT, PROCESS_HOST_CHECK_RESULT, SCHEDULE_HOST_DOWNTIME, SCHEDULE_SVC_DOWNTIME, SCHEDULE_SVC_CHECK, SCHEDULE_HOST_CHECK, SCHEDULE_HOST_SVC_CHECKS

# Emplacement du socket utilisé pour recevoir des messages de Nagios.
# Si absent, il ne sera pas possible de recevoir les notifications de Nagios.
listen_unix = /tmp/connector-nagios.sock

# Emplacement du pipe utilisé pour envoyer des commandes à Nagios.
# Si absent, il ne sera pas possible d'envoyer des commandes à Nagios.
#nagios_pipe = /var/spool/nagios/nagios.cmd



[loggers]
keys=root,twisted

[handlers]
keys=syslog,console

[formatters]
keys=consoleFormatter,syslogFormatter

[logger_root]
level=DEBUG
handlers=syslog,console

[logger_twisted]
level=DEBUG
qualname=twisted
propagate=0
handlers=syslog,console

[handler_console]
class=StreamHandler
level=DEBUG
formatter=consoleFormatter
args=(sys.stdout,)

[handler_syslog]
class=handlers.SysLogHandler
level=DEBUG
formatter=syslogFormatter
args='/dev/log', 'daemon'

[formatter_consoleFormatter]
format=[%(created)f] %(levelname)s::%(name)s::%(message)s
datefmt=
class=vigilo.common.logging.VigiloFormatter

[formatter_syslogFormatter]
format=%(processName)s[%(process)d]: %(levelname)s::%(name)s::%(message)s
datefmt=
class=vigilo.common.logging.VigiloFormatter
